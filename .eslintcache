[{"/mnt/c/Users/Ahmed/project/frontend/src/reportWebVitals.js":"1","/mnt/c/Users/Ahmed/project/frontend/src/App.js":"2","/mnt/c/Users/Ahmed/project/frontend/src/index.js":"3","/mnt/c/Users/Ahmed/project/frontend/src/reducers/index.js":"4","/mnt/c/Users/Ahmed/project/frontend/src/serviceWorker.js":"5","/mnt/c/Users/Ahmed/project/frontend/src/actions/itemActions.js":"6","/mnt/c/Users/Ahmed/project/frontend/src/actions/userActions.js":"7","/mnt/c/Users/Ahmed/project/frontend/src/containers/SignupPage.js":"8","/mnt/c/Users/Ahmed/project/frontend/src/reducers/itemsReducer.js":"9","/mnt/c/Users/Ahmed/project/frontend/src/actions/cartActions.js":"10","/mnt/c/Users/Ahmed/project/frontend/src/containers/ItemsList.js":"11","/mnt/c/Users/Ahmed/project/frontend/src/containers/CartPage.js":"12","/mnt/c/Users/Ahmed/project/frontend/src/containers/Home.js":"13","/mnt/c/Users/Ahmed/project/frontend/src/containers/LoginPage.js":"14","/mnt/c/Users/Ahmed/project/frontend/src/reducers/cartReducer.js":"15","/mnt/c/Users/Ahmed/project/frontend/src/reducers/usersReducer.js":"16","/mnt/c/Users/Ahmed/project/frontend/src/components/Navbar.js":"17","/mnt/c/Users/Ahmed/project/frontend/src/components/LoginForm.js":"18","/mnt/c/Users/Ahmed/project/frontend/src/components/Cart.js":"19","/mnt/c/Users/Ahmed/project/frontend/src/components/Item.js":"20","/mnt/c/Users/Ahmed/project/frontend/src/components/SignupForm.js":"21","/mnt/c/Users/Ahmed/project/frontend/src/components/Logout.js":"22"},{"size":362,"mtime":1607315439820,"results":"23","hashOfConfig":"24"},{"size":2529,"mtime":1607470452589,"results":"25","hashOfConfig":"26"},{"size":857,"mtime":1607385334749,"results":"27","hashOfConfig":"26"},{"size":276,"mtime":1607383894031,"results":"28","hashOfConfig":"26"},{"size":4764,"mtime":1607385452463,"results":"29","hashOfConfig":"26"},{"size":397,"mtime":1607384959008,"results":"30","hashOfConfig":"26"},{"size":3971,"mtime":1607468211984,"results":"31","hashOfConfig":"26"},{"size":1362,"mtime":1607384766509,"results":"32","hashOfConfig":"26"},{"size":561,"mtime":1607383868376,"results":"33","hashOfConfig":"26"},{"size":1852,"mtime":1607384901332,"results":"34","hashOfConfig":"26"},{"size":954,"mtime":1607384665043,"results":"35","hashOfConfig":"26"},{"size":1563,"mtime":1607384180204,"results":"36","hashOfConfig":"26"},{"size":401,"mtime":1607471311132,"results":"37","hashOfConfig":"26"},{"size":1185,"mtime":1607384727337,"results":"38","hashOfConfig":"26"},{"size":1449,"mtime":1607390215243,"results":"39","hashOfConfig":"26"},{"size":1327,"mtime":1607383839995,"results":"40","hashOfConfig":"26"},{"size":779,"mtime":1607471018033,"results":"41","hashOfConfig":"26"},{"size":603,"mtime":1607385158982,"results":"42","hashOfConfig":"26"},{"size":884,"mtime":1607385104021,"results":"43","hashOfConfig":"26"},{"size":588,"mtime":1607385131670,"results":"44","hashOfConfig":"26"},{"size":1024,"mtime":1607390098820,"results":"45","hashOfConfig":"26"},{"size":189,"mtime":1607385198603,"results":"46","hashOfConfig":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"122nuth",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"szggjn",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"/mnt/c/Users/Ahmed/project/frontend/src/reportWebVitals.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/App.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/index.js",[],["95","96"],"/mnt/c/Users/Ahmed/project/frontend/src/reducers/index.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/serviceWorker.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/actions/itemActions.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/actions/userActions.js",["97"],"import { updateCart } from './cartActions'\n\nexport const addUser = (user) => {\n    return {\n        type: 'ADD_USER',\n        payload: user\n        // ditch the payload and argument\n    }\n}\n\nconst userLogoutAction = () => {\n    return {\n        type: 'LOGOUT_USER'\n    }\n}\n\nexport const registerUser = (userFormData) => {\n\n    const { firstName, lastName, email, password, passwordConfirmation } = userFormData;\n    \n    return (dispatch) => {\n        \n        dispatch( { type: 'REGISTERING_USER'});\n\n        fetch('http://localhost:3000/users', \n        {\n          method: 'POST', \n          credentials: 'include', \n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n              user: {\n                  first_name: firstName,\n                  last_name: lastName,\n                  email: email,\n                  password: password,\n                  password_confirmation: passwordConfirmation\n              }\n          }),\n        }) \n        .then(resp => resp.json())\n        .then(resp => {\n            console.log(resp)\n            if(resp.logged_in === true) {\n                localStorage.setItem(\"user\", JSON.stringify(resp.user))\n                localStorage.setItem(\"cart\", JSON.stringify(resp.cart))\n                localStorage.setItem(\"loggedIn\", JSON.stringify(resp.logged_in))\n                dispatch(addUser(resp))\n                dispatch(updateCart(resp.cart))\n                // we may want to dispatch an action to the carts reducer to add a new cart\n                // you want the cart id. (logging in will be different)\n            }\n        })\n    }\n}\n\nexport const loginUser = (userCredentials) => {\n\n    const { email, password } = userCredentials;\n    \n    return (dispatch) => {\n\n        fetch('http://localhost:3000/login', \n        {\n          method: 'POST', \n          credentials: 'include', \n          headers: {\n              'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n              user: {\n                  email: email,\n                  password: password\n              }\n          })\n        }) \n        .then(resp => resp.json())\n        .then(resp => {\n            if(resp.logged_in === true) {\n                // {logged_in: true, user: {…}, cart: {…}}\n                //     cart: {id: 39, items: Array(6), total: 492}\n                //     logged_in: true\n                //     user: {id: 2, first_name: \"Lorenzo\", last_name: \"Medici\", email: \"lorenzo@medici.com\", password_digest: \"$2a$12$bjTOrU/JL2ZA0wDpvM71deIexdzSJoATMF.f6jzviuIt9FVjbXU3a\", …}\n                //     __proto__: Object\n                // store data in localStorage\n                console.log(resp)\n                localStorage.setItem(\"user\", JSON.stringify(resp.user))\n                localStorage.setItem(\"cart\", JSON.stringify(resp.cart))\n                localStorage.setItem(\"loggedIn\", JSON.stringify(resp.logged_in))\n\n                dispatch(addUser(resp));\n                dispatch(updateCart(resp));\n                // ditch argument in response. will be updating the localStorage with data, \n                // and state will be pulling it from there.\n            }\n        })\n        // .then(user => dispatch(addUser(user)))\n    }\n}\n\nexport const logoutUser = () => {\n\n    return (dispatch) => {\n\n        fetch('http://localhost:3000/logout', \n        {\n            method: 'DELETE', \n            credentials: 'include', \n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n\n        .then(resp => resp.json())\n        .then(res => {\n            localStorage.setItem(\"user\", JSON.stringify({id: \"\", first_name: \"\", last_name: \"\", email: \"\"}))\n            localStorage.setItem(\"loggedIn\", \"false\")\n            localStorage.setItem(\"cart\", JSON.stringify({id: \"\", items: [], total: 0}))\n\n            dispatch(updateCart());\n            dispatch(addUser());\n        })\n    }\n}","/mnt/c/Users/Ahmed/project/frontend/src/containers/SignupPage.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/reducers/itemsReducer.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/actions/cartActions.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/containers/ItemsList.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/containers/CartPage.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/containers/Home.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/containers/LoginPage.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/reducers/cartReducer.js",["98"],"export default function cartReducer(state = {\n    cartId: null,\n    cartItems: [],\n    total: 0,\n    addingItemToCart: false,\n    placingOrder: false\n}, action) {\n\n    // the below line is what causes app local storage to have an empty cart on page reload, even\n    // if there was none there, as i caused by invoking localStorage.clear().\n    // it looks in localstorage, and if it doesnt find a cart it sets one. \n\n    const localStoredCart =  localStorage.getItem(\"cart\") ? \n        JSON.parse(localStorage.getItem(\"cart\")) :\n        localStorage.setItem(\"cart\", JSON.stringify({id: \"\", items: [], total: 0}))\n        JSON.parse(localStorage.getItem(\"cart\"))\n    \n    switch(action.type) {\n\n        case 'UPDATE_CART':\n            console.log('updating cart')\n            return {\n                ...state,\n                cartId: localStoredCart.id,\n                cartItems: localStoredCart.items,\n                total: localStoredCart.total\n                // cartId: action.payload.cart.id,\n                // cartItems: action.payload.cart.items,\n                // total: action.payload.cart.total\n            }\n\n        case 'ADDING_TO_CART':\n            console.log('Adding items to cart')\n            return {\n                ...state,\n                addingItemToCart: true\n            }\n            \n        case 'PLACING_ORDER':\n            console.log(\"placing order\")\n            \n        default:\n            return state\n    }\n}","/mnt/c/Users/Ahmed/project/frontend/src/reducers/usersReducer.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/components/Navbar.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/components/LoginForm.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/components/Cart.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/components/Item.js",["99"],"import React from 'react';\n\nconst Item = props => {\n    return(\n        <div>\n        \n            <h4>{props.item.name}</h4> <br></br>\n            <img src={props.item.image}></img>\n            <p>{props.item.description}</p>\n            <p>{props.item.price}</p>\n            <button type=\"button\" onClick={props.handleButtonClick}>{props.buttonText}</button>\n            {/* // dynamically populate the button text */}\n             {/* change onClick fn name in props to be generic */}\n             {/* onClick={props.handleButtonClick} */}\n        </div>\n    )\n}\n\n\nexport default Item;","/mnt/c/Users/Ahmed/project/frontend/src/components/SignupForm.js",[],"/mnt/c/Users/Ahmed/project/frontend/src/components/Logout.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":11,"column":7,"nodeType":"106","messageId":"107","endLine":11,"endColumn":23},{"ruleId":"108","severity":1,"message":"109","line":42,"column":9,"nodeType":"110","messageId":"111","endLine":43,"endColumn":25},{"ruleId":"112","severity":1,"message":"113","line":8,"column":13,"nodeType":"114","endLine":8,"endColumn":41},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'userLogoutAction' is assigned a value but never used.","Identifier","unusedVar","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]